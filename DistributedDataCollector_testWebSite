在云端linux系统中安装http_load命令行测试工具，并将数据源网站分布在不同地区的URL地址全部设置在urls.txt文件中，在云端各区域的linux
系统中运行命令：http_load -parallel 5 -fetches 1000 urls.txt（此命令表示同时使用5个进程，随机访问urls.txt中的网址列表，总共访问
urls.txt中所有url各1000次），最终可得到结果：
        （1）a fetches, b max parallel, c bytes, in d seconds;
        （2）e mean bytes/connection;
        （3）f fetches/sec, g bytes/sec;
        （4）msecs/connect: h mean, i max, j min;
        （5）msecs/first-response: k mean, m max, n min.
    （1）表示测试中运行了a个请求，最大的并发进程数是b，总计传输的数据是cbytes，运行的时间是d秒，（2）表示每一连接平均传输的数据量
e，（3）表示每秒的响应请求为f，每秒传递的数据为g bytes/sec，（4）表示每连接的平均响应时间是h msecs，最大的响应时间i msecs，最小的
响应时间j msecs。则可记录访问频率峰值Fu0=a（次/s）、网络延时间Td0=h（ms）和流量限制I0=g（Byte/s）。

访问频率限制测试：
    本从属专利访问频率限制峰值测试模块的设计思想为：
    1、设置访问频率峰值初值Fu1和访问频率增量Δa：Fu1=Fu0，Δa=100次。
    2、利用二分法获取访问频率峰值：
      （1）以访问频率峰值初值访问数据源网站，若访问成功，则重新设置Fu1=Fu1+Δa，若访问失败，则重新设置Fu1=Fu1-Δa。
      （2）重复执行（1），直到访问成功变为访问失败，并记录刚出现访问失败时的Fu1值，获取峰值所在区间[Fu1-Δa,Fu1)，或者访问失败变为访问成功，
      并记录刚出现访问成功时的Fu1值，获取峰值所在区间[Fu1,Fu1+Δa)。
      （3）对（2）获得的由成功变为失败的峰值区间[Fu1-Δa,Fu1)，或者由失败变为成功的峰值区间[Fu1,Fu1+Δa)，重复运用二分法进行下载流量测试，直到
      区间长度小于等于1退出计算。
    3、多次执行步骤2，最终得出多个访问频率峰值，最终取其平均值作为最终的访问频率峰值。
   
    
下载流量峰值测试：
    本从属专利下载流量测试模块的设计思想为：
    1、设置下载流量限制速率初值I1，I1=I0。
    2、以该速率值持续访问数据源网站并下载数据，累加下载的流量，并实时记录下载持续时间T2'和累计流量值I2'，直到拒绝访问时，取出该时刻的累积流量
    值和时间，以及上上一成功访问的累积下载流量值I2和时间T2。
    3、多次试验步骤2，取I2的平均值，作为下载流量峰值。
    
下载速率的测试：
    本从属专利下载速度测试模块的设计思想为：
    持续下载一分钟，并用累积下载流量/60s，作为下载速度v0，并进行多次测试，取多次下载平均值v'作为最终的下载速率。
    
延时时间的测试：
    本从属专利延时时间测试模块的设计思想为：
    记录请求发出时刻和信息返回时刻，求两个时刻的时间间隔，并进行多次测试，取其平均值作为延时时间。
    
    
    
    


