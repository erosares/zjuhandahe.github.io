Description:
    Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.
Example:
    For example,
    "A man, a plan, a canal: Panama" is a palindrome.
    "race a car" is not a palindrome.
Note:
    Have you consider that the string might be empty? This is a good question to ask during an interview.
    For the purpose of this problem, we define empty string as valid palindrome.
-------------------------------------------------------------MY----------------------------------------------------------------
Analysis:
    1. 回文，即正序和逆序是一样的，这里可以使用栈的方式解决，只需要判断字符是否是字母和数字，并转换为统一的大写或者小写。
Solution:
    Solution 1:
        public boolean isPalindrome(String s) {
            if (s == null || s.length() < 1)
			        return true;
		        Stack<Character> stack = new Stack<Character>();
		        StringBuilder sb = new StringBuilder("");
		        for (char c : s.toCharArray()) {
			        if ((c >= 65 && c <= 90)) {
				        stack.push(c);
				        sb.append(String.valueOf(c));
			        }
			        if (c >= 97 && c <= 122) {
				        stack.push((char) (c - 32));
				        sb.append(stack.peek());
			        }
			        if (c >= 48 && c <= 57) {
				        stack.push(c);
				        sb.append(String.valueOf(c));
			        }
		        }
		        StringBuilder sbNew = new StringBuilder("");
		        while (!stack.isEmpty()) {
			        sbNew.append(stack.pop());
		        }
		        return sb.toString().equals(sbNew.toString());
         }
