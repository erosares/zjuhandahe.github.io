Description:
    Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.
    (i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).
    You are given a target value to search. If found in the array return its index, otherwise return -1.
    You may assume no duplicate exists in the array.
---------------------------------------------------------MY-------------------------------------------------------------
Analysis:
    折半查找
Solution:
    public static int search2(int[] nums, int target) {
		    if (nums.length == 0)
			    return -1;
		    int low = 0;
		    int high = nums.length - 1;
		    while (low < high) {
			    int mid = (low + high) / 2;
			    if (nums[mid] == target)
				    return mid;
			    if (nums[low] <= nums[mid]) {
				    if (nums[low] <= target && nums[mid] > target) {
					    high = mid - 1;
				    } else {
					    low = mid + 1;
				    }
			    } else {
				    if (nums[high] >= target && nums[mid] < target) {
					    low = mid + 1;
				    } else {
					    high = mid - 1;
				    }
			    }
		    }
		    return nums[low] == target ? low : -1;
	    }
