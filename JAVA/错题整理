1. 优化Hibernate所鼓励的7大措施：
    （1）尽量使用many-to-one，避免使用单项one-to-many；
    （2）灵活使用单向one-to-many；
    （3）不用一对一，使用多对一代替一对一；
    （4）配置对象缓存，不使用集合缓存；
    （5）一对多使用Bag， 多对一使用Set；
    （6）继承使用显示多态 HQL:from object polymorphism="exlicit" 避免查处所有对象
    （7）消除大表，使用二级缓存 
2. JAVA中传递有两种方式：值传递和引用传递
    基本类型和String str = ""这两种方式属于值传递；
    对象和数组都属于引用传递。
3. 抽象类和接口
    抽象类：用abstract修饰，抽象类中可以没有抽象方法，但抽象方法肯定在抽象类中，且抽象方法定义时不能有方法体；
           抽象类不可以实例化只能通过继承在子类中实现其所有的抽象方法；抽象类如果不被继承就没有任何意义；
           抽象类为子类定义了一个公共类型，封装了子类中的重复内容。
    接口：Interface关键字定义接口，是特殊的抽象类因为类中只包含抽象方法；接口中不能定义成员变量可以定义常量；
          接口是其通过其他类使用implements关键字定义实现类，一个类一旦实现接口就必须实现其中的所有抽象方法，一个类可以实现多个接口，接口名之间用逗号
              隔开即可；
          一个接口可以通过extends关键字继承另一个接口，与此同时继承了父类中的所有方法。
4. forward和redirect：
    request.forward和reponse.redirect
    （1）redirect地址栏变化，forward发生在服务器端内部从而导致浏览器不知道响应资源来自哪里；
    （2）redirect可以重定向到同一个站点上的其他应用程序中的资源，forward 只能将请求 转发给同一个WEB应用中的组件；
    （3）redirect默认是302码，包含两次请求和两次响应；
    （4）redirect效率较低。
    解释：
        重定向，其实是两次request, 第一次，客户端request A,服务器响应，并response回来，告诉浏览器，你应该去B。这个时候IE可以看到地址变了，而且历史的
            回退按钮也亮了。重定向可以访问自己web应用以外的资源。在重定向的过程中，传输的信息会被丢失。
    
