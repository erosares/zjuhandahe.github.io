public class Solution {
   public List<List<Integer>> threeSum(int[] nums)
    {
        List<List<Integer>> result = new ArrayList<List<Integer>>();
        for (int i = 0; i < nums.length; i++)
        {
            for (int j = i + 1; j < nums.length; j++)
            {
                for (int k = j + 1; k < nums.length; k++)
                {
                    if ((nums[i] + nums[j] + nums[k]) == 0)
                    {
                        result.add(new ArrayList<Integer>(Arrays.asList(nums[i], nums[j], nums[k])));
                    }
                }
            }
        }
        HashMap<String, String> hash = new HashMap<String, String>();
        for (List<Integer> list : result)
        {
            Collections.sort(list);
            String temp = list.get(0).toString() + "," + list.get(1).toString() + "," + list.get(2).toString();
            hash.put(temp, temp);
        }
        result.clear();
        for (java.util.Map.Entry<String, String> key : hash.entrySet())
        {
            ArrayList<Integer> arrayList = new ArrayList<Integer>();
            for (String string : Arrays.asList(key.getKey().split(",")))
            {
                arrayList.add(Integer.parseInt(string.trim()));
            }
            result.add(arrayList);
        }
        return result;
    }
}
